
services:
  fastapi:
    build: .
    container_name: fastapi-app
    hostname: 0.0.0.0
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - postgres
      - mongo
      - redis
    command: >
      sh -c "sleep 20 && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/app

  db_fill:
    build: 
      context: .
      dockerfile: ./db_fill/Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - postgres
    command: >
      sh -c "sleep 10 && alembic upgrade head && python prescript.py"


  postgres:
    image: postgres:13
    container_name: postgres-db
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST: ${DB_HOST}

    ports:
      - "5432:5432"

    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo:
    image: mongo:latest
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:  
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

       # Сервис для Kafka
  kafka1:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
    ports:
      - "9092:9092"
    volumes:
      - kafka_volume1:/bitnami/kafka


  kafka_ui:
    image: provectuslabs/kafka-ui:v0.4.0
    ports:
        - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka1:9092
      - KAFKA_CLUSTERS_0_NAME=kraft

  read_kafka:
    build: 
      context: .
      dockerfile: ./kafka_read/Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - postgres
    

# Определение тома для постоянных данных PostgreSQL
volumes:
  postgres_data:
    driver: local
  mongodb_data:
  kafka_volume1:
